/*******************************************************************************
 * wallaroo - A library for configurable creation and wiring of C++ classes.
 * Copyright (C) 2012 Daniele Pallastrelli
 *
 * This file is part of wallaroo.
 * For more information, see http://wallaroo.googlecode.com/
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 ******************************************************************************/

#include <iostream>
#include <string>
#include "consoleplayer.h"

WALLAROO_REGISTER( ConsolePlayer );

ConsolePlayer::ConsolePlayer() :
    availableBets( "availableBets", RegistrationToken() )
{
}

cxx0x::shared_ptr< Bet > ConsolePlayer::NextBet()
{
    // print the usage for this bet:
    std::cout << "Place your bet. Bets availables:" << std::endl;
    for ( BetFactories::iterator i = availableBets.begin(); i != availableBets.end(); ++i )
    {
        cxx0x::shared_ptr< BetConsoleFactory > f = i -> lock();
        if ( f )
            std::cout << "\t" << f -> Help() << std::endl;
    }
    std::cout << "\t(exit to quit.)" << std::endl;
    std::cout << "where bin = {00,0,1,2,3,..,35,36}" << std::endl << std::endl;

    // parse the user string:
    std::string line;
    getline( std::cin, line );

    if ( line == "exit" )
        exit( 0 );

    for ( BetFactories::iterator i = availableBets.begin(); i != availableBets.end(); ++i )
    {
        cxx0x::shared_ptr< BetConsoleFactory > f = i -> lock();
        if ( f )
        {
            cxx0x::shared_ptr< Bet > bet = f -> Create( line );
            if ( bet ) return bet;
        }
    }

    std::cout << std::endl << "command unknown" << std::endl << std::endl;
    return cxx0x::shared_ptr< Bet >();
}


