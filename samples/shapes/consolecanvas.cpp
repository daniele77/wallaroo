/*******************************************************************************
 * wallaroo - A library for configurable creation and wiring of C++ classes.
 * Copyright (C) 2012 Daniele Pallastrelli
 *
 * This file is part of wallaroo.
 * For more information, see http://wallaroo.googlecode.com/
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 ******************************************************************************/

#include <iostream>
#include "consolecanvas.h"

WALLAROO_REGISTER( ConsoleCanvas );

ConsoleCanvas::ConsoleCanvas()
{
    for ( std::size_t x = 0; x < X_SIZE; ++x )
        for ( std::size_t y = 0; y < Y_SIZE; ++y )
            canvas[ x ][ y ] = EMPTY;
}

void ConsoleCanvas::Point( unsigned int x, unsigned int y )
{
    y = y * 70 / 100; // console form factor
    if ( x >= 0 && x < X_SIZE && y >= 0 && y < Y_SIZE )
        canvas[ x ][ y ] = FULL;
}

void ConsoleCanvas::Show()
{
    for ( std::size_t y = 0; y < Y_SIZE; ++y )
    {
        for ( std::size_t x = 0; x < X_SIZE; ++x )
            std::cout << canvas[ x ][ y ];
        std::cout << std::endl;
    }
}

