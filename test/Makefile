################################################################################
# wallaroo - A library for configurable creation and wiring of C++ classes.
# Copyright (C) 2012 Daniele Pallastrelli
#
# This file is part of wallaroo.
# For more information, see http://wallaroolib.sourceforge.net/
#
# Boost Software License - Version 1.0 - August 17th, 2003
#
# Permission is hereby granted, free of charge, to any person or organization
# obtaining a copy of the software and accompanying documentation covered by
# this license (the "Software") to use, reproduce, display, distribute,
# execute, and transmit the Software, and to prepare derivative works of the
# Software, and to permit third-parties to whom the Software is furnished to
# do so, all subject to the following:
#
# The copyright notices in the Software and this entire statement, including
# the above license grant, this restriction and the following disclaimer,
# must be included in all copies of the Software, in whole or in part, and
# all derivative works of the Software, unless such copies or derivative
# works are solely in the form of machine-executable object code generated by
# a source language processor.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
# SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
# FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
# DEALINGS IN THE SOFTWARE.
################################################################################

# usage:
# make BOOST_INC=<BOOST_INCLUDE_DIR> BOOST_LIB=<BOOST_LIB_DIR>
# or
# make BOOST_INC=<BOOST_INCLUDE_DIR> BOOST_LIB=<BOOST_LIB_DIR> CXXFLAGS=-std=c++0x

override RUN_OPT += --build_info --report_level=short

override CXXFLAGS += -Wall -Wextra -Werror -I.. -DBOOST_TEST_DYN_LINK -isystem $(BOOST_INC)
override LDFLAGS += -L$(BOOST_LIB) -lboost_unit_test_framework -ldl

OBJ := test_cfg_file.o \
       test_wal_file.o \
       test_multiplicitycheck.o \
       test_wiring.o \
       test_creation.o \
       test_dynamiclib.o \
       test_attributes.o \
       test_tokensource.o \
       test_grammar.o \
       driver.o
OBJ_PLUGIN := plugin.o plugin_ext.o
OBJ_PLUGIN2 := plugin2.o

EXE := test_suite
PLUGIN := plugin.so
PLUGIN2 := plugin2.so


.PHONY: all test clean

all: $(EXE) $(PLUGIN) $(PLUGIN2) test

# NOTE you need to pass -E to the linker to provide RTTI across process boundaries!
# NOTE LDFLAGS is already contained in LINK.cc but we need it after the object files
$(EXE): $(OBJ)
	$(LINK.cc) -Wl,-E $(OBJ) -o $(EXE) $(LDFLAGS)

# NOTE you need to pass -E to the linker to provide RTTI across process boundaries!
$(PLUGIN): $(OBJ_PLUGIN)
	$(LINK.cc) -fPIC -shared -Wl,-E -Wl,-soname,$@ -o $@ $^

# NOTE you need to pass -E to the linker to provide RTTI across process boundaries!
$(PLUGIN2): $(OBJ_PLUGIN2)
	$(LINK.cc) -fPIC -shared -Wl,-E -Wl,-soname,$@ -o $@ $^

test:
	export LD_LIBRARY_PATH=.:$(BOOST_LIB) ; ./$(EXE) $(RUN_OPT)

clean:
	@- $(RM) *.o *~ core $(EXE) *.so
