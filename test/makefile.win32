################################################################################
# wallaroo - A library for configurable creation and wiring of C++ classes.
# Copyright (C) 2012 Daniele Pallastrelli
#
# This file is part of wallaroo.
# For more information, see http://wallaroo.googlecode.com/
#
# Boost Software License - Version 1.0 - August 17th, 2003
#
# Permission is hereby granted, free of charge, to any person or organization
# obtaining a copy of the software and accompanying documentation covered by
# this license (the "Software") to use, reproduce, display, distribute,
# execute, and transmit the Software, and to prepare derivative works of the
# Software, and to permit third-parties to whom the Software is furnished to
# do so, all subject to the following:
#
# The copyright notices in the Software and this entire statement, including
# the above license grant, this restriction and the following disclaimer,
# must be included in all copies of the Software, in whole or in part, and
# all derivative works of the Software, unless such copies or derivative
# works are solely in the form of machine-executable object code generated by
# a source language processor.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
# SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
# FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
# DEALINGS IN THE SOFTWARE.
################################################################################

#define macros
EXE_NAME = test_suite.exe
PLUGIN1_NAME = plugin.dll
PLUGIN2_NAME = plugin2.dll
DIR_INCLUDE = /I.. /I%BOOST%
COMPILE_FLAGS = /nologo /MD /EHsc /DBOOST_TEST_DYN_LINK
LINK_FLAGS = /LIBPATH:%BOOST%\stage\lib /NOLOGO
PATH = $(PATH);$(BOOST)\stage\lib\ # to run the test suite

EXE_OBJ_FILES= \
    test_cfg_file.obj \
    test_multiplicitycheck.obj \
    test_wiring.obj \
    test_creation.obj \
    test_dynamiclib.obj \
    driver.obj

PLUGIN1_OBJ_FILES= \
    plugin.obj

PLUGIN2_OBJ_FILES= \
    plugin2.obj

.cpp.obj ::
    @echo Compiling...
    cl /c $(COMPILE_FLAGS) $(DIR_INCLUDE) $<
 
# create directories and build application
all: clean plugin1 plugin2 mainapp test

$(EXE_NAME) : $(EXE_OBJ_FILES)
    @echo Linking $(EXE_NAME)...
    link $(LINK_FLAGS) /out:$(EXE_NAME) $(EXE_OBJ_FILES)

$(PLUGIN1_NAME) : $(PLUGIN1_OBJ_FILES)
    @echo Linking $(PLUGIN1_NAME)...
    link $(LINK_FLAGS) /DLL /out:$(PLUGIN1_NAME) $(PLUGIN1_OBJ_FILES)

$(PLUGIN2_NAME) : $(PLUGIN2_OBJ_FILES)
    @echo Linking $(PLUGIN2_NAME)...
    link $(LINK_FLAGS) /DLL /out:$(PLUGIN2_NAME) $(PLUGIN2_OBJ_FILES)

# application

mainapp: $(EXE_NAME)

plugin1: $(PLUGIN1_NAME)

plugin2: $(PLUGIN2_NAME)

# run the test
test:
    $(EXE_NAME)
    
# delete output directories
clean:
    del *.obj
    del *.exp
    del *.lib
    del $(EXE_NAME)
    del $(PLUGIN1_NAME)
    del $(PLUGIN2_NAME)


